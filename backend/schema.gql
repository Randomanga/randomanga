# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Cover {
  id: ID!
  large: String!
  original: String!
  small: String!
}

input CreateMangaInput {
  banner: String
  chapters: Float
  description: String
  genres: [String!] = []
  origin: String!
  synonyms: [String!] = []
  title: CreateTitleInput!
  volumes: Float
}

input CreateTitleInput {
  english: String
  native: String
  romaji: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ExternalLinks {
  """Anilist link"""
  al: String
  id: ID!

  """Kitsu link"""
  kitsu: String

  """MyAnimeList link"""
  mal: String

  """Mangadex link"""
  mdex: String

  """Novelupdates link"""
  nu: String
}

type Manga {
  banner: String

  """The number of chapters translated for this manga"""
  chapters: Float
  cover: Cover!
  createdAt: DateTime!
  description: String!

  """Links to external websites for this manga. """
  external: ExternalLinks!
  genres: [String!]!
  id: ID!

  """The country which the manga originated"""
  origin: String!
  status: Status!
  synonyms: [String!]!
  tags: [Tag!]!

  """The default title of the manga. Regardless of language. """
  title: Title!
  updatedAt: DateTime!

  """The number of volumes translated for this manga. """
  volumes: Float
}

type Mutation {
  createManga(banner: Upload, cover: Upload, createMangaInput: CreateMangaInput!): Manga!
  removeManga(id: String!): Manga!
  updateManga(updateMangaInput: UpdateMangaInput!): Manga!
}

type Query {
  manga(id: String!): Manga!
}

"""The publication status of the manga. """
enum Status {
  """The manga has been cancelled, reason unknown. """
  CANCELLED

  """The manga has finished publishing"""
  COMPLETED

  """Similar to cancelled, but with a chance it might come back. """
  HIATUS

  """The manga is still being published in the country of origin. """
  ONGOING
}

type Tag {
  id: ID!
  name: String!
}

type Title {
  english: String
  id: ID!
  native: String
  romaji: String
}

input UpdateMangaInput {
  banner: String
  chapters: Float
  description: String
  genres: [String!] = []
  id: String!
  origin: String
  synonyms: [String!] = []
  title: CreateTitleInput
  volumes: Float
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload